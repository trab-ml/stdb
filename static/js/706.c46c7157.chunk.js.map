{"version":3,"file":"static/js/706.c46c7157.chunk.js","mappings":"mMAOMA,EAAcC,EAAAA,KAAaC,MAAM,CACrCC,MAAOF,EAAAA,KAAaE,MAAM,iBAAiBC,SAAS,YACpDC,SAAUJ,EAAAA,KAAaG,SAAS,cAoDlC,UAjDc,WACZ,IAAME,GAAQC,EAAAA,EAAAA,KACRC,GAAeC,EAAAA,EAAAA,GAAcH,EAAMI,YAAYC,KAAK,OAE1D,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CAAEX,MAAO,GAAIE,SAAU,IACtCU,iBAAkBf,EAClBgB,SAAU,SAACC,EAAMC,GAAyB,IAArBC,EAAaD,EAAbC,cACnBC,YAAW,WACTC,MAAMC,KAAKC,UAAUN,EAAQ,KAAM,IACnCE,GAAc,EAChB,GAAG,IACL,EAAEK,SAED,SAAAC,GAAA,IAAGC,EAAMD,EAANC,OAAQC,EAAOF,EAAPE,QAASC,EAAYH,EAAZG,aAAY,OAC/BhB,EAAAA,EAAAA,KAACiB,EAAAA,GAAI,CAAAL,UACHM,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQC,cAAe1B,EAAe,SAAW,MAAO2B,WAAY,UAAWX,SAAA,EACjGZ,EAAAA,EAAAA,KAACmB,EAAAA,EAAG,CAACC,GAAI,CAAEI,SAAU,EAAGC,GAAI7B,EAAe,EAAI,GAAIgB,UACjDZ,EAAAA,EAAAA,KAAC0B,EAAAA,GAAK,CACJC,KAAK,QACLC,GAAIC,EAAAA,EACJC,MAAM,gBACNC,WAAS,EACTC,MAAOjB,EAAQxB,OAAS0C,QAAQnB,EAAOvB,OACvC2C,WAAYnB,EAAQxB,OAASuB,EAAOvB,WAGxCS,EAAAA,EAAAA,KAACmB,EAAAA,EAAG,CAACC,GAAI,CAAEI,SAAU,EAAGC,GAAI7B,EAAe,EAAI,GAAIgB,UACjDZ,EAAAA,EAAAA,KAAC0B,EAAAA,GAAK,CACJC,KAAK,WACLQ,KAAK,WACLP,GAAIC,EAAAA,EACJC,MAAM,WACNC,WAAS,EACTC,MAAOjB,EAAQtB,UAAYwC,QAAQnB,EAAOrB,UAC1CyC,WAAYnB,EAAQtB,UAAYqB,EAAOrB,cAG3CO,EAAAA,EAAAA,KAACoC,EAAAA,EAAM,CAACD,KAAK,SAASE,QAAQ,YAAYC,MAAM,UAAUC,SAAUvB,EAAaJ,SAAC,gBAI/E,GAIf,C","sources":["components/Login.tsx"],"sourcesContent":["import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { Button, TextField, Box } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email').required('Required'),\n  password: Yup.string().required('Required'),\n});\n\nconst Login = () => {\n  const theme = useTheme();\n  const isMobileView = useMediaQuery(theme.breakpoints.down('sm'));\n\n  return (\n    <Formik\n      initialValues={{ email: '', password: '' }}\n      validationSchema={LoginSchema}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      }}\n    >\n      {({ errors, touched, isSubmitting }) => (\n        <Form>\n          <Box sx={{ display: 'flex', flexDirection: isMobileView ? 'column' : 'row', alignItems: 'center' }}>\n            <Box sx={{ flexGrow: 1, mr: isMobileView ? 0 : 2 }}>\n              <Field\n                name=\"email\"\n                as={TextField}\n                label=\"Email Address\"\n                fullWidth\n                error={touched.email && Boolean(errors.email)}\n                helperText={touched.email && errors.email}\n              />\n            </Box>\n            <Box sx={{ flexGrow: 1, mr: isMobileView ? 0 : 2 }}>\n              <Field\n                name=\"password\"\n                type=\"password\"\n                as={TextField}\n                label=\"Password\"\n                fullWidth\n                error={touched.password && Boolean(errors.password)}\n                helperText={touched.password && errors.password}\n              />\n            </Box>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={isSubmitting}>\n              Sign In\n            </Button>\n          </Box>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default Login;\n"],"names":["LoginSchema","Yup","shape","email","required","password","theme","useTheme","isMobileView","useMediaQuery","breakpoints","down","_jsx","Formik","initialValues","validationSchema","onSubmit","values","_ref","setSubmitting","setTimeout","alert","JSON","stringify","children","_ref2","errors","touched","isSubmitting","Form","_jsxs","Box","sx","display","flexDirection","alignItems","flexGrow","mr","Field","name","as","TextField","label","fullWidth","error","Boolean","helperText","type","Button","variant","color","disabled"],"sourceRoot":""}