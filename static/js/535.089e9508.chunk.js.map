{"version":3,"file":"static/js/535.089e9508.chunk.js","mappings":"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","sources":["components/Register.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { Formik, Form, Field, ErrorMessage, FormikHelpers } from 'formik';\nimport * as Yup from 'yup';\nimport { TextField, Button } from '@mui/material';\n\ninterface FormValues {\n  firstName: string;\n  lastName: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nconst SignupSchema = Yup.object().shape({\n  firstName: Yup.string().required('Required'),\n  lastName: Yup.string().required('Required'),\n  email: Yup.string().email('Invalid email').required('Required'),\n  password: Yup.string().required('Required').min(8, 'Password must be at least 8 characters'),\n  confirmPassword: Yup.string()\n    .required('Required')\n    .oneOf([Yup.ref('password'), 'false, failed'], 'Passwords must match'),\n});\n\nconst initialValues: FormValues = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n};\n\nconst Register: FC = () => {\n  const handleSubmit = (values: FormValues, { setSubmitting }: FormikHelpers<FormValues>) => {\n    console.log(values);\n    setSubmitting(false);\n  };\n\n  return (\n    <div className=\"form-container\">\n      <h1>Sign up</h1>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit} validationSchema={SignupSchema}>\n        {({ errors, touched, isSubmitting }) => (\n          <Form>\n            <div className=\"form-field\">\n              <Field name=\"firstName\" as={TextField} label=\"First Name\" variant=\"outlined\" fullWidth />\n              <ErrorMessage name=\"firstName\">{(msg) => <div className=\"error\">{msg}</div>}</ErrorMessage>\n            </div>\n            <div className=\"form-field\">\n              <Field name=\"lastName\" as={TextField} label=\"Last Name\" variant=\"outlined\" fullWidth />\n              <ErrorMessage name=\"lastName\">{(msg) => <div className=\"error\">{msg}</div>}</ErrorMessage>\n            </div>\n            <div className=\"form-field\">\n              <Field name=\"email\" as={TextField} label=\"Email\" variant=\"outlined\" fullWidth />\n              <ErrorMessage name=\"email\">{(msg) => <div className=\"error\">{msg}</div>}</ErrorMessage>\n            </div>\n            <div className=\"form-field\">\n              <Field name=\"password\" as={TextField} label=\"Password\" variant=\"outlined\" type=\"password\" fullWidth />\n              <ErrorMessage name=\"password\">{(msg) => <div className=\"error\">{msg}</div>}</ErrorMessage>\n            </div>\n            <div className=\"form-field\">\n              <Field\n                name=\"confirmPassword\"\n                as={TextField}\n                label=\"Confirm Password\"\n                variant=\"outlined\"\n                type=\"password\"\n                fullWidth\n              />\n              <ErrorMessage name=\"confirmPassword\">\n                {(msg) => <div className=\"error\">{msg}</div>}\n              </ErrorMessage>\n            </div>\n            <div className=\"form-field\">\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\" disabled={isSubmitting}>\n                {isSubmitting ? 'Submitting...' : 'Sign Up'}\n              </Button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default Register;"],"names":["SignupSchema","Yup","shape","firstName","required","lastName","email","password","min","confirmPassword","oneOf","initialValues","_jsxs","className","children","_jsx","Formik","onSubmit","values","_ref","setSubmitting","console","log","validationSchema","_ref2","errors","touched","isSubmitting","Form","Field","name","as","TextField","label","variant","fullWidth","ErrorMessage","msg","type","Button","color","disabled"],"sourceRoot":""}